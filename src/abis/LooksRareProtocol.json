[
  "constructor(address,address)",
  "error BadSignatureS()",
  "error BadSignatureV(uint8)",
  "error CollectionDiscountFactorTooHigh()",
  "error CurrencyAlreadyWhitelisted(address)",
  "error CurrencyNotContract(address)",
  "error CurrencyNotWhitelisted(address)",
  "error InvalidSignatureEOA()",
  "error InvalidSignatureERC1271()",
  "error NoNonceToIncrement()",
  "error NoPotentialOwner()",
  "error NoTransferManagerForAssetType(uint16)",
  "error NotController()",
  "error NotOwner()",
  "error NotReferrer()",
  "error NullSignerAddress()",
  "error OrderInvalid()",
  "error OutsideOfTimeRange()",
  "error PercentageTooHigh()",
  "error ReentrancyFail()",
  "error SameDomainSeparator()",
  "error SlippageAsk()",
  "error SlippageBid()",
  "error StrategyNotAvailable(uint16)",
  "error StrategyNotUsed(uint16)",
  "error StrategyProtocolFeeTooHigh(uint16)",
  "error StrategyUsed(uint16)",
  "error TransferAlreadyInProgress()",
  "error TransferERC20Fail()",
  "error TransferFail()",
  "error WrongAssetType(uint8)",
  "error WrongCaller()",
  "error WrongCurrency()",
  "error WrongLengths()",
  "error WrongMerkleProof()",
  "error WrongNonces()",
  "error WrongPotentialOwner()",
  "error WrongSignatureLength(uint256)",
  "event CancelOwnershipTransfer(address)",
  "event CurrencyRemoved(address)",
  "event CurrencyWhitelisted(address)",
  "event InitiateOwnershipTransfer(address,address)",
  "event NewBidAskNonces(uint112,uint112)",
  "event NewCollectionDiscountFactor(address,uint256)",
  "event NewDomainSeparator()",
  "event NewOwner(address)",
  "event NewProtocolFeeRecipient(address)",
  "event NewReferralController(address)",
  "event NewReferrer(address,uint16)",
  "event NewStrategy(uint16,address)",
  "event OrderNoncesCancelled(uint112[])",
  "event ReferrerRemoved(address)",
  "event StrategyUpdated(uint16,bool,bool,uint16)",
  "event SubsetNoncesCancelled(uint112[])",
  "event TakerAsk(uint128,address,address,address,address,uint256,address,address,uint256[],uint256[],address[],uint256[])",
  "event TakerBid(uint128,address,address,address,uint256,address,address,uint256[],uint256[],address[],uint256[])",
  "function addCurrency(address)",
  "function addStrategy(uint16,bool,uint16,uint16,address)",
  "function addTransferManagerForAssetType(uint8,address)",
  "function adjustDiscountFactorCollection(address,uint256)",
  "function cancelOrderNonces(uint112[])",
  "function cancelOwnershipTransfer()",
  "function cancelSubsetNonces(uint112[])",
  "function confirmOwnershipTransfer()",
  "function executeTakerAsk(tuple(address,uint16,uint256,uint256[],uint256[],bytes),tuple(uint112,uint112,uint16,uint8,uint112,uint16,address,address,address,address,uint256,uint256,uint256,uint256[],uint256[],bytes),bytes,bytes32,bytes32[],address)",
  "function executeTakerBid(tuple(address,uint16,uint256,uint256[],uint256[],bytes),tuple(uint112,uint112,uint16,uint8,uint112,uint16,address,address,address,address,uint256,uint256,uint256,uint256[],uint256[],bytes),bytes,bytes32,bytes32[],address) payable",
  "function incrementBidAskNonces(bool,bool)",
  "function information() view returns (bytes32, uint256, bytes32, uint256)",
  "function initiateOwnershipTransfer(address)",
  "function isCurrencyWhitelisted(address) view returns (bool)",
  "function owner() view returns (address)",
  "function potentialOwner() view returns (address)",
  "function referralController() view returns (address)",
  "function registerReferrer(address,uint16)",
  "function removeCurrency(address)",
  "function setProtocolFeeRecipient(address)",
  "function unregisterReferrer(address)",
  "function updateDomainSeparator()",
  "function updateReferralController(address)",
  "function updateStrategy(uint16,bool,uint16,bool)",
  "function viewCollectionDiscountFactor(address) view returns (uint256)",
  "function viewStrategy(uint16) view returns (tuple(bool,bool,uint16,uint16,address))",
  "function viewUserBidAskNonces(address) view returns (tuple(uint112,uint112))",
  "function viewUserOrderNonce(address,uint112) view returns (bool)",
  "function viewUserSubsetNonce(address,uint112) view returns (bool)"
]
